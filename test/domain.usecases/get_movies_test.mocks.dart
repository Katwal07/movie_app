// Mocks generated by Mockito 5.4.5 from annotations
// in movie_app/test/domain.usecases/get_trending_movies_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:movie_app/core/error/app_error.dart' as _i5;
import 'package:movie_app/domain/movie/entity/movie.dart' as _i6;
import 'package:movie_app/domain/movie/repositories/movie.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i3.MovieRepository {
  @override
  _i4.Future<_i2.Either<_i5.AppError, List<_i6.MovieEntity>>>
  getTrendingMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getTrendingMovies, []),
            returnValue: _i4.Future<
              _i2.Either<_i5.AppError, List<_i6.MovieEntity>>
            >.value(
              _FakeEither_0<_i5.AppError, List<_i6.MovieEntity>>(
                this,
                Invocation.method(#getTrendingMovies, []),
              ),
            ),
            returnValueForMissingStub: _i4.Future<
              _i2.Either<_i5.AppError, List<_i6.MovieEntity>>
            >.value(
              _FakeEither_0<_i5.AppError, List<_i6.MovieEntity>>(
                this,
                Invocation.method(#getTrendingMovies, []),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.AppError, List<_i6.MovieEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.AppError, List<_i6.MovieEntity>>>
  nowPlayingMovies() =>
      (super.noSuchMethod(
            Invocation.method(#nowPlayingMovies, []),
            returnValue: _i4.Future<
              _i2.Either<_i5.AppError, List<_i6.MovieEntity>>
            >.value(
              _FakeEither_0<_i5.AppError, List<_i6.MovieEntity>>(
                this,
                Invocation.method(#nowPlayingMovies, []),
              ),
            ),
            returnValueForMissingStub: _i4.Future<
              _i2.Either<_i5.AppError, List<_i6.MovieEntity>>
            >.value(
              _FakeEither_0<_i5.AppError, List<_i6.MovieEntity>>(
                this,
                Invocation.method(#nowPlayingMovies, []),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.AppError, List<_i6.MovieEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.AppError, List<_i6.MovieEntity>>> popularMovies() =>
      (super.noSuchMethod(
            Invocation.method(#popularMovies, []),
            returnValue: _i4.Future<
              _i2.Either<_i5.AppError, List<_i6.MovieEntity>>
            >.value(
              _FakeEither_0<_i5.AppError, List<_i6.MovieEntity>>(
                this,
                Invocation.method(#popularMovies, []),
              ),
            ),
            returnValueForMissingStub: _i4.Future<
              _i2.Either<_i5.AppError, List<_i6.MovieEntity>>
            >.value(
              _FakeEither_0<_i5.AppError, List<_i6.MovieEntity>>(
                this,
                Invocation.method(#popularMovies, []),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.AppError, List<_i6.MovieEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.AppError, List<_i6.MovieEntity>>>
  topRatedMovies() =>
      (super.noSuchMethod(
            Invocation.method(#topRatedMovies, []),
            returnValue: _i4.Future<
              _i2.Either<_i5.AppError, List<_i6.MovieEntity>>
            >.value(
              _FakeEither_0<_i5.AppError, List<_i6.MovieEntity>>(
                this,
                Invocation.method(#topRatedMovies, []),
              ),
            ),
            returnValueForMissingStub: _i4.Future<
              _i2.Either<_i5.AppError, List<_i6.MovieEntity>>
            >.value(
              _FakeEither_0<_i5.AppError, List<_i6.MovieEntity>>(
                this,
                Invocation.method(#topRatedMovies, []),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.AppError, List<_i6.MovieEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.AppError, List<_i6.MovieEntity>>>
  upcommingMovies() =>
      (super.noSuchMethod(
            Invocation.method(#upcommingMovies, []),
            returnValue: _i4.Future<
              _i2.Either<_i5.AppError, List<_i6.MovieEntity>>
            >.value(
              _FakeEither_0<_i5.AppError, List<_i6.MovieEntity>>(
                this,
                Invocation.method(#upcommingMovies, []),
              ),
            ),
            returnValueForMissingStub: _i4.Future<
              _i2.Either<_i5.AppError, List<_i6.MovieEntity>>
            >.value(
              _FakeEither_0<_i5.AppError, List<_i6.MovieEntity>>(
                this,
                Invocation.method(#upcommingMovies, []),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.AppError, List<_i6.MovieEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.AppError, List<_i6.MovieEntity>>>
  recommendatedMovie(int? movieId) =>
      (super.noSuchMethod(
            Invocation.method(#recommendatedMovie, [movieId]),
            returnValue: _i4.Future<
              _i2.Either<_i5.AppError, List<_i6.MovieEntity>>
            >.value(
              _FakeEither_0<_i5.AppError, List<_i6.MovieEntity>>(
                this,
                Invocation.method(#recommendatedMovie, [movieId]),
              ),
            ),
            returnValueForMissingStub: _i4.Future<
              _i2.Either<_i5.AppError, List<_i6.MovieEntity>>
            >.value(
              _FakeEither_0<_i5.AppError, List<_i6.MovieEntity>>(
                this,
                Invocation.method(#recommendatedMovie, [movieId]),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.AppError, List<_i6.MovieEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.AppError, List<_i6.MovieEntity>>> similarMovies(
    int? movieId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#similarMovies, [movieId]),
            returnValue: _i4.Future<
              _i2.Either<_i5.AppError, List<_i6.MovieEntity>>
            >.value(
              _FakeEither_0<_i5.AppError, List<_i6.MovieEntity>>(
                this,
                Invocation.method(#similarMovies, [movieId]),
              ),
            ),
            returnValueForMissingStub: _i4.Future<
              _i2.Either<_i5.AppError, List<_i6.MovieEntity>>
            >.value(
              _FakeEither_0<_i5.AppError, List<_i6.MovieEntity>>(
                this,
                Invocation.method(#similarMovies, [movieId]),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.AppError, List<_i6.MovieEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.AppError, List<_i6.MovieEntity>>> searchMovie(
    String? query,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#searchMovie, [query]),
            returnValue: _i4.Future<
              _i2.Either<_i5.AppError, List<_i6.MovieEntity>>
            >.value(
              _FakeEither_0<_i5.AppError, List<_i6.MovieEntity>>(
                this,
                Invocation.method(#searchMovie, [query]),
              ),
            ),
            returnValueForMissingStub: _i4.Future<
              _i2.Either<_i5.AppError, List<_i6.MovieEntity>>
            >.value(
              _FakeEither_0<_i5.AppError, List<_i6.MovieEntity>>(
                this,
                Invocation.method(#searchMovie, [query]),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.AppError, List<_i6.MovieEntity>>>);
}
